basePath: /api/v1
definitions:
  response.Object:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  task.Request:
    properties:
      description:
        type: string
      status:
        type: string
      title:
        type: string
      user_id:
        type: string
    type: object
  task.Response:
    properties:
      description:
        type: string
      id:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  user.Request:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  user.Response:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for a todo application.
  title: Todo API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login a user and receive JWT token
      parameters:
      - description: User login data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.Request'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Login a user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.Request'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            $ref: '#/definitions/user.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Register a new user
      tags:
      - auth
  /health:
    get:
      consumes:
      - application/json
      description: Check the health of the application
      produces:
      - application/json
      responses:
        "200":
          description: Health status
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      summary: Health check
      tags:
      - health
  /tasks:
    get:
      consumes:
      - application/json
      description: Get all tasks for the current user with optional filtering and
        sorting
      parameters:
      - description: Filter tasks by title
        in: query
        name: title
        type: string
      - description: Filter tasks by status
        in: query
        name: status
        type: string
      - description: Field to sort by (e.g., id, title)
        enum:
        - id
        - title
        - status
        in: query
        name: sortBy
        type: string
      - description: Sort order (asc or desc)
        enum:
        - asc
        - desc
        in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of tasks
          schema:
            items:
              $ref: '#/definitions/task.Response'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      security:
      - BearerAuth: []
      summary: List tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Add a new task for the current user
      parameters:
      - description: Task request
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/task.Request'
      produces:
      - application/json
      responses:
        "200":
          description: Task created successfully
          schema:
            $ref: '#/definitions/task.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      security:
      - BearerAuth: []
      summary: Add a task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete task by ID for the current user
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task deleted
          schema:
            type: string
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      security:
      - BearerAuth: []
      summary: Delete a task
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Get task by ID for the current user
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task details
          schema:
            $ref: '#/definitions/task.Response'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      security:
      - BearerAuth: []
      summary: Get a task
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Update task by ID for the current user
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Task request
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/task.Request'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      security:
      - BearerAuth: []
      summary: Update a task
      tags:
      - tasks
  /users:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            items:
              $ref: '#/definitions/user.Response'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      security:
      - BearerAuth: []
      summary: List users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Add a new user
      parameters:
      - description: User request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.Request'
      produces:
      - application/json
      responses:
        "200":
          description: User created successfully
          schema:
            $ref: '#/definitions/user.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      security:
      - BearerAuth: []
      summary: Add a user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User deleted
          schema:
            type: string
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      security:
      - BearerAuth: []
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User details
          schema:
            $ref: '#/definitions/user.Response'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      security:
      - BearerAuth: []
      summary: Get a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.Request'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      security:
      - BearerAuth: []
      summary: Update a user
      tags:
      - users
  /users/email:
    get:
      consumes:
      - application/json
      description: Get user details by email
      parameters:
      - description: User Email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User details
          schema:
            $ref: '#/definitions/user.Response'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      security:
      - BearerAuth: []
      summary: Get user by email
      tags:
      - users
  /users/search:
    get:
      consumes:
      - application/json
      description: Search users by name or email
      parameters:
      - description: Name
        in: query
        name: name
        type: string
      - description: Email
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of users matching the search criteria
          schema:
            items:
              $ref: '#/definitions/user.Response'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Object'
      security:
      - BearerAuth: []
      summary: Search users
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
